#环境参数信息
variables:
  #Docker镜像仓库地址&账号密码信息
  DOCKER_REPO_URL: "10.211.55.11:8088"
  DOCKER_REPO_USERNAME: admin
  DOCKER_REPO_PASSWORD: Harbor12345
  #Kubernetes相关信息配置(空间与服务端口)
  K8S_NAMESPACE: "wudimanong"
  PORT: "8080"

#定义CI/CD阶段
stages:
  - test
  - build
  - push
  - deploy

#执行单元测试阶段
maven-test:
  stage: test
  script:
    - mvn clean test

#代码编译打包镜像阶段
maven-build:
  stage: build
  script:
    - mvn clean package -DskipTests

#将打包的Docker镜像上传至私有镜像仓库
docker-push:
  stage: push
  script:
    #对打包的镜像进行tag
    - docker tag $DOCKER_REPO_URL/$CI_PROJECT_PATH $DOCKER_REPO_URL/$CI_PROJECT_PATH/$CI_BUILD_REF_NAME:${CI_COMMIT_SHA:0:8}
    #登录私有镜像仓库
    - docker login $DOCKER_REPO_URL -u $DOCKER_REPO_USERNAME -p $DOCKER_REPO_PASSWORD
    #上传应用镜像至镜像仓库
    - docker push $DOCKER_REPO_URL/$CI_PROJECT_PATH/$CI_BUILD_REF_NAME:${CI_COMMIT_SHA:0:8}
    - docker rmi $DOCKER_REPO_URL/$CI_PROJECT_PATH/$CI_BUILD_REF_NAME:${CI_COMMIT_SHA:0:8}
    - docker rmi $DOCKER_REPO_URL/$CI_PROJECT_PATH

#将应用发布至Kubernetes测试集群（这里指定为手动确认方式）
deploy-test:
  stage: deploy
  when: manual
  script:
    - kubectl config use-context kubernetes-admin@kubernetes
    - sed -e  "s/__REPLICAS__/1/; s/__PORT__/$PORT/; s/__APP_NAME__/$CI_PROJECT_NAME/; s/__PROFILE__/test/;  s/__IMAGE__/$DOCKER_REPO_URL\/${CI_PROJECT_PATH//\//\\/}\/${CI_BUILD_REF_NAME//\//\\/}:${CI_COMMIT_SHA:0:8}/" kubernetes/deploy.yaml | kubectl -n ${K8S_NAMESPACE}  apply -f  -
