{"ast":null,"code":"var _jsxFileName = \"/Users/yennanliu/SpringPlayground/springAssignmentSystem/frontend/frontend_app/src/App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { useLocalState } from \"./util/useLocalStorage\";\n\n/**\n *\n * MAIN APP (entry point)\n *\n *  https://github.com/tp02ga/AssignmentSubmissionApp/blob/master/front-end/src/App.js\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log(\"APP start!\");\n\n  /**\n   *  https://youtu.be/pupnAIRpbKo?si=O-NSykY6ChvYenb7&t=629\n   *\n   *  useState can save state (val) in the scope of function\n   *\n   */\n  //const [getJwt, setJwt] = useState(\"\"); // getter, setter\n  // https://youtu.be/aIr288-3AFE?si=utEgteuvcG6m0Aan&t=792\n  const [getJwt, setJwt] = useLocalState(\"\", \"jwt\"); // getter, setter\n\n  /**\n   *  https://youtu.be/pupnAIRpbKo?si=ne6sMKKJR_cR3gds&t=391\n   *\n   *  dependency is an array\n   *\n   *  useEffect( () => function}, dependency)\n   *\n   */\n  useEffect(() => {\n    if (!getJwt) {\n      const reqBody = {\n        username: \"admin\",\n        password: \"123\"\n      };\n\n      /**\n       * Fetch : call backend/other api, then go to next line of code, will not freeze and only operate once receive result\n       * https://youtu.be/N1QStjH1rVI?si=ozUe3M3tx6z3i-T1&t=1256\n       */\n      fetch(\"api/auth/login\", {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"post\",\n        body: JSON.stringify(reqBody)\n      })\n      // .then((response) => response.json)\n      // .then((data) => console.log(data))\n      .then(response => Promise.all([response.json(), response.headers])).then(([body, headers]) => {\n        // headers.forEach((element) => {\n        //   console.log(element);\n        // });\n\n        // jwt : json web token\n        //const jwt = headers.get(\"authorization\")\n        setJwt(headers.get(\"authorization\"));\n        //console.log(jwt)\n        console.log(getJwt);\n        console.log(body);\n      });\n    }\n  }, [getJwt]);\n  useEffect(() => {\n    console.log(`>>> JWT is ${getJwt}`);\n  }, [getJwt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HELLO WORLD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"JWT value is \", getJwt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EuVqDVLXHxxxPrVUurnJMZChmWA=\", false, function () {\n  return [useLocalState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useLocalState","jsxDEV","_jsxDEV","App","_s","console","log","getJwt","setJwt","reqBody","username","password","fetch","headers","method","body","JSON","stringify","then","response","Promise","all","json","get","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yennanliu/SpringPlayground/springAssignmentSystem/frontend/frontend_app/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { useLocalState } from \"./util/useLocalStorage\";\n\n/**\n *\n * MAIN APP (entry point)\n *\n *  https://github.com/tp02ga/AssignmentSubmissionApp/blob/master/front-end/src/App.js\n */\n\nfunction App() {\n  console.log(\"APP start!\");\n\n  /**\n   *  https://youtu.be/pupnAIRpbKo?si=O-NSykY6ChvYenb7&t=629\n   *\n   *  useState can save state (val) in the scope of function\n   *\n   */\n  //const [getJwt, setJwt] = useState(\"\"); // getter, setter\n  // https://youtu.be/aIr288-3AFE?si=utEgteuvcG6m0Aan&t=792\n  const [getJwt, setJwt] = useLocalState(\"\", \"jwt\"); // getter, setter\n\n  /**\n   *  https://youtu.be/pupnAIRpbKo?si=ne6sMKKJR_cR3gds&t=391\n   *\n   *  dependency is an array\n   *\n   *  useEffect( () => function}, dependency)\n   *\n   */\n  useEffect(() => {\n    if (!getJwt) {\n      const reqBody = {\n        username: \"admin\",\n        password: \"123\",\n      };\n\n      /**\n       * Fetch : call backend/other api, then go to next line of code, will not freeze and only operate once receive result\n       * https://youtu.be/N1QStjH1rVI?si=ozUe3M3tx6z3i-T1&t=1256\n       */\n      fetch(\"api/auth/login\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"post\",\n        body: JSON.stringify(reqBody),\n      })\n        // .then((response) => response.json)\n        // .then((data) => console.log(data))\n        .then((response) => Promise.all([response.json(), response.headers]))\n        .then(([body, headers]) => {\n          // headers.forEach((element) => {\n          //   console.log(element);\n          // });\n\n          // jwt : json web token\n          //const jwt = headers.get(\"authorization\")\n          setJwt(headers.get(\"authorization\"));\n          //console.log(jwt)\n          console.log(getJwt);\n          console.log(body);\n        });\n    }\n  }, [getJwt]);\n\n  useEffect(() => {\n    console.log(`>>> JWT is ${getJwt}`);\n  }, [getJwt]);\n\n  return (\n    <div className=\"App\">\n      <h1>HELLO WORLD</h1>\n      <div>JWT value is {getJwt}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,SAASC,aAAa,QAAQ,wBAAwB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAOA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;;EAEzB;AACF;AACA;AACA;AACA;AACA;EACE;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,MAAM,CAAC,GAAGR,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;;EAEnD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEF,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,MAAM,EAAE;MACX,MAAME,OAAO,GAAG;QACdC,QAAQ,EAAE,OAAO;QACjBC,QAAQ,EAAE;MACZ,CAAC;;MAED;AACN;AACA;AACA;MACMC,KAAK,CAAC,gBAAgB,EAAE;QACtBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;MAC9B,CAAC;MACC;MACA;MAAA,CACCS,IAAI,CAAEC,QAAQ,IAAKC,OAAO,CAACC,GAAG,CAAC,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,EAAEH,QAAQ,CAACN,OAAO,CAAC,CAAC,CAAC,CACpEK,IAAI,CAAC,CAAC,CAACH,IAAI,EAAEF,OAAO,CAAC,KAAK;QACzB;QACA;QACA;;QAEA;QACA;QACAL,MAAM,CAACK,OAAO,CAACU,GAAG,CAAC,eAAe,CAAC,CAAC;QACpC;QACAlB,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;QACnBF,OAAO,CAACC,GAAG,CAACS,IAAI,CAAC;MACnB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZT,SAAS,CAAC,MAAM;IACdO,OAAO,CAACC,GAAG,CAAE,cAAaC,MAAO,EAAC,CAAC;EACrC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA;MAAAuB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB3B,OAAA;MAAAuB,QAAA,GAAK,eAAa,EAAClB,MAAM;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAACzB,EAAA,CAnEQD,GAAG;EAAA,QAWeH,aAAa;AAAA;AAAA8B,EAAA,GAX/B3B,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}